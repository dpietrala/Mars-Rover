<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Manipulator_2019URC_1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Manipulator_2019URC_1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri May 31 06:37:37 2019
<BR><P>
<H3>Maximum Stack Usage =       1648 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIM7_IRQHandler &rArr; Control_Act &rArr; Axes_Act &rArr; Axes_AutoSystem &rArr; Axes_AutoSystemOn &rArr; Axes_CoordinateAct &rArr; Kin_FindRpy &rArr; Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[61]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemManage_Handler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">DebugMon_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[1e]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[20]">CAN1_RX0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[21]">CAN1_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[22]">CAN1_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1f]">CAN1_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4c]">CAN2_RX0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4d]">CAN2_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4e]">CAN2_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4b]">CAN2_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5a]">DCMI_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3b]">DMA1_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[48]">DMA2_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[51]">DMA2_Stream6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[52]">DMA2_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[49]">ETH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4a]">ETH_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[12]">EXTI0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[34]">EXTI15_10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[13]">EXTI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[14]">EXTI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[15]">EXTI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[16]">EXTI4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[23]">EXTI9_5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[10]">FLASH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3c]">FMC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5c]">FPU_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5b]">HASH_RNG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2e]">I2C2_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2d]">I2C2_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[55]">I2C3_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[54]">I2C3_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4f]">OTG_FS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[36]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[59]">OTG_HS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[58]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[d]">PVD_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[11]">RCC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[35]">RTC_Alarm_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[f]">RTC_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5f]">Reset_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3d]">SDIO_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2f]">SPI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[30]">SPI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3f]">SPI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from control.o(i.SysTick_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5d]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[e]">TAMP_STAMP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[24]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[27]">TIM1_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[26]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[25]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[28]">TIM2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[29]">TIM3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2a]">TIM4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3e]">TIM5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[42]">TIM6_DAC_IRQHandler</a> from motors.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[43]">TIM7_IRQHandler</a> from control.o(i.TIM7_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[37]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3a]">TIM8_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[39]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[38]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[40]">UART4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[41]">UART5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[31]">USART1_IRQHandler</a> from comunication.o(i.USART1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[32]">USART2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[33]">USART3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[53]">USART6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[c]">WWDG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[60]">__main</a> from __main.o(!!!main) referenced from startup_stm32f407xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[60]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[62]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[64]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[139]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[13a]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[65]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[13b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[6b]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[66]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[13c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[13d]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[13e]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[13f]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[140]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[141]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[142]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[143]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[144]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[145]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[146]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[147]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[148]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[149]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[14a]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[14b]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[14c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[14d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[14e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[14f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[70]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[150]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[151]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[152]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[153]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[154]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[155]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[156]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[63]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[157]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[68]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[6a]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[158]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[6c]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Control_Conf &rArr; Control_ReadBackup &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[159]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[77]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[6f]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[15a]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[71]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5f]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))

<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_ToolSystem
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadCurrent
</UL>

<P><STRONG><a name="[15b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[15c]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[15e]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[15f]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[75]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[161]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[162]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[164]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[6e]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[72]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[165]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>AddDev_Conf</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, adddevice.o(i.AddDev_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AddDev_Conf
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Conf
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDev_LaserConf
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[167]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>Axes_Act</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, axes.o(i.Axes_Act))
<BR><BR>[Stack]<UL><LI>Max Depth = 1632<LI>Call Chain = Axes_Act &rArr; Axes_AutoSystem &rArr; Axes_AutoSystemOn &rArr; Axes_CoordinateAct &rArr; Kin_FindRpy &rArr; Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Calc
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_ToolSystem
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_KartCheckResults
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_JointSystem
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_BaseSystem
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Act
</UL>

<P><STRONG><a name="[be]"></a>Axes_AutoClearSeq</STRONG> (Thumb, 248 bytes, Stack size 12 bytes, axes.o(i.Axes_AutoClearSeq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Axes_AutoClearSeq
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadCmdFromHost
</UL>

<P><STRONG><a name="[84]"></a>Axes_AutoReadPointFromBackup</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, axes.o(i.Axes_AutoReadPointFromBackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Axes_AutoReadPointFromBackup &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Conf
</UL>

<P><STRONG><a name="[87]"></a>Axes_AutoSavePoint</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, axes.o(i.Axes_AutoSavePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Axes_AutoSavePoint &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameSavePoint
</UL>

<P><STRONG><a name="[8a]"></a>Axes_AutoSavePointToBackup</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, axes.o(i.Axes_AutoSavePointToBackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Axes_AutoSavePointToBackup &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_StructConf
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadCmdFromHost
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameSavePoint
</UL>

<P><STRONG><a name="[91]"></a>Axes_AutoSystemOn</STRONG> (Thumb, 1996 bytes, Stack size 64 bytes, axes.o(i.Axes_AutoSystemOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 1600<LI>Call Chain = Axes_AutoSystemOn &rArr; Axes_CoordinateAct &rArr; Kin_FindRpy &rArr; Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_CoordinateAct
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadCmdFromHost
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
</UL>

<P><STRONG><a name="[92]"></a>Axes_CoordinateAct</STRONG> (Thumb, 584 bytes, Stack size 8 bytes, axes.o(i.Axes_CoordinateAct))
<BR><BR>[Stack]<UL><LI>Max Depth = 1536<LI>Call Chain = Axes_CoordinateAct &rArr; Kin_FindRpy &rArr; Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadCmdFromHost
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
</UL>

<P><STRONG><a name="[bd]"></a>Axes_Defpos</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, axes.o(i.Axes_Defpos))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadCmdFromHost
</UL>

<P><STRONG><a name="[bc]"></a>Axes_ManipDisable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, axes.o(i.Axes_ManipDisable))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadCmdFromHost
</UL>

<P><STRONG><a name="[bb]"></a>Axes_ManipEnable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, axes.o(i.Axes_ManipEnable))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadCmdFromHost
</UL>

<P><STRONG><a name="[9a]"></a>Axspr</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, kin.o(i.Axspr))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Axspr &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
</UL>

<P><STRONG><a name="[9d]"></a>Ayspr</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, kin.o(i.Ayspr))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Ayspr &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
</UL>

<P><STRONG><a name="[9e]"></a>B_q11</STRONG> (Thumb, 1224 bytes, Stack size 176 bytes, kin.o(i.B_q11))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = B_q11 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
</UL>

<P><STRONG><a name="[a2]"></a>B_q12</STRONG> (Thumb, 444 bytes, Stack size 144 bytes, kin.o(i.B_q12))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = B_q12 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
</UL>

<P><STRONG><a name="[a3]"></a>B_q21</STRONG> (Thumb, 1216 bytes, Stack size 168 bytes, kin.o(i.B_q21))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = B_q21 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
</UL>

<P><STRONG><a name="[a4]"></a>B_q22</STRONG> (Thumb, 460 bytes, Stack size 152 bytes, kin.o(i.B_q22))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = B_q22 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
</UL>

<P><STRONG><a name="[a6]"></a>ClearStr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, comunication.o(i.ClearStr))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_SendToHost
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFromHost
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_PrepareFrameMotPos
</UL>

<P><STRONG><a name="[125]"></a>Com_Conf</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, comunication.o(i.Com_Conf))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>Com_SendToHost</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, comunication.o(i.Com_SendToHost))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Com_SendToHost &rArr; Com_PrepareFrameMotPos &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStr
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_PrepareFrameTelemetry
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_PrepareFrameMotPos
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>Control_Act</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, control.o(i.Control_Act))
<BR><BR>[Stack]<UL><LI>Max Depth = 1640<LI>Call Chain = Control_Act &rArr; Axes_Act &rArr; Axes_AutoSystem &rArr; Axes_AutoSystemOn &rArr; Axes_CoordinateAct &rArr; Kin_FindRpy &rArr; Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_WriteBackup
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Status
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadCmdFromHost
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Act
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[b3]"></a>Control_Conf</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, control.o(i.Control_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Control_Conf &rArr; Control_ReadBackup &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SystemInit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Conf
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TimConf
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_StructConf
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadBackup
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_IWDGConf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_BackupConf
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoReadPointFromBackup
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>FunFor_0_0</STRONG> (Thumb, 790 bytes, Stack size 120 bytes, kin.o(i.FunFor_0_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = FunFor_0_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[c0]"></a>FunFor_0_1</STRONG> (Thumb, 746 bytes, Stack size 120 bytes, kin.o(i.FunFor_0_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = FunFor_0_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[c1]"></a>FunFor_0_2</STRONG> (Thumb, 430 bytes, Stack size 88 bytes, kin.o(i.FunFor_0_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = FunFor_0_2 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[c2]"></a>FunFor_0_3</STRONG> (Thumb, 2264 bytes, Stack size 208 bytes, kin.o(i.FunFor_0_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = FunFor_0_3 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[c4]"></a>FunFor_1_0</STRONG> (Thumb, 910 bytes, Stack size 152 bytes, kin.o(i.FunFor_1_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = FunFor_1_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[c5]"></a>FunFor_1_1</STRONG> (Thumb, 922 bytes, Stack size 152 bytes, kin.o(i.FunFor_1_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = FunFor_1_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[c6]"></a>FunFor_1_2</STRONG> (Thumb, 594 bytes, Stack size 120 bytes, kin.o(i.FunFor_1_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = FunFor_1_2 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[c7]"></a>FunFor_1_3</STRONG> (Thumb, 2574 bytes, Stack size 232 bytes, kin.o(i.FunFor_1_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = FunFor_1_3 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[c8]"></a>FunFor_2_0</STRONG> (Thumb, 434 bytes, Stack size 88 bytes, kin.o(i.FunFor_2_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = FunFor_2_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[c9]"></a>FunFor_2_1</STRONG> (Thumb, 814 bytes, Stack size 120 bytes, kin.o(i.FunFor_2_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = FunFor_2_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[ca]"></a>FunFor_2_2</STRONG> (Thumb, 490 bytes, Stack size 96 bytes, kin.o(i.FunFor_2_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = FunFor_2_2 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[cb]"></a>FunFor_2_3</STRONG> (Thumb, 1818 bytes, Stack size 184 bytes, kin.o(i.FunFor_2_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = FunFor_2_3 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[eb]"></a>FunFor_3_0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunFor_3_0))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[ec]"></a>FunFor_3_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunFor_3_1))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[ed]"></a>FunFor_3_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunFor_3_2))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[ee]"></a>FunFor_3_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunFor_3_3))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
</UL>

<P><STRONG><a name="[cc]"></a>FunInv2_0_0</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, kin.o(i.FunInv2_0_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FunInv2_0_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[cd]"></a>FunInv2_0_1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, kin.o(i.FunInv2_0_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FunInv2_0_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[ce]"></a>FunInv2_0_2</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, kin.o(i.FunInv2_0_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = FunInv2_0_2 &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[cf]"></a>FunInv2_0_3</STRONG> (Thumb, 258 bytes, Stack size 64 bytes, kin.o(i.FunInv2_0_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = FunInv2_0_3 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[d0]"></a>FunInv2_1_0</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kin.o(i.FunInv2_1_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = FunInv2_1_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[d1]"></a>FunInv2_1_1</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, kin.o(i.FunInv2_1_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = FunInv2_1_1 &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[f0]"></a>FunInv2_1_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunInv2_1_2))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[f1]"></a>FunInv2_1_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunInv2_1_3))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[d2]"></a>FunInv2_2_0</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, kin.o(i.FunInv2_2_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FunInv2_2_0 &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[d3]"></a>FunInv2_2_1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, kin.o(i.FunInv2_2_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FunInv2_2_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[d4]"></a>FunInv2_2_2</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, kin.o(i.FunInv2_2_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = FunInv2_2_2 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[d5]"></a>FunInv2_2_3</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, kin.o(i.FunInv2_2_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = FunInv2_2_3 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[f2]"></a>FunInv2_3_0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunInv2_3_0))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[f3]"></a>FunInv2_3_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunInv2_3_1))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[f4]"></a>FunInv2_3_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunInv2_3_2))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[f5]"></a>FunInv2_3_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunInv2_3_3))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>

<P><STRONG><a name="[d6]"></a>FunRef_0_0</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, kin.o(i.FunRef_0_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = FunRef_0_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[d7]"></a>FunRef_0_1</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, kin.o(i.FunRef_0_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = FunRef_0_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[d8]"></a>FunRef_0_2</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, kin.o(i.FunRef_0_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = FunRef_0_2 &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[101]"></a>FunRef_0_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunRef_0_3))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[d9]"></a>FunRef_1_0</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, kin.o(i.FunRef_1_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = FunRef_1_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[da]"></a>FunRef_1_1</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, kin.o(i.FunRef_1_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = FunRef_1_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[db]"></a>FunRef_1_2</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, kin.o(i.FunRef_1_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = FunRef_1_2 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[102]"></a>FunRef_1_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunRef_1_3))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[dc]"></a>FunRef_2_0</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, kin.o(i.FunRef_2_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = FunRef_2_0 &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[dd]"></a>FunRef_2_1</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, kin.o(i.FunRef_2_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = FunRef_2_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[de]"></a>FunRef_2_2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kin.o(i.FunRef_2_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = FunRef_2_2 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[103]"></a>FunRef_2_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunRef_2_3))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[104]"></a>FunRef_3_0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunRef_3_0))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[105]"></a>FunRef_3_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunRef_3_1))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[106]"></a>FunRef_3_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunRef_3_2))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[107]"></a>FunRef_3_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.FunRef_3_3))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
</UL>

<P><STRONG><a name="[df]"></a>Fun_0_0</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, kin.o(i.Fun_0_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Fun_0_0 &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[e0]"></a>Fun_0_1</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, kin.o(i.Fun_0_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Fun_0_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[e1]"></a>Fun_0_2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kin.o(i.Fun_0_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Fun_0_2 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[f6]"></a>Fun_0_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.Fun_0_3))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[e2]"></a>Fun_1_0</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, kin.o(i.Fun_1_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Fun_1_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[e3]"></a>Fun_1_1</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, kin.o(i.Fun_1_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Fun_1_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[e4]"></a>Fun_1_2</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, kin.o(i.Fun_1_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Fun_1_2 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[f7]"></a>Fun_1_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.Fun_1_3))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[e5]"></a>Fun_2_0</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, kin.o(i.Fun_2_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Fun_2_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[e6]"></a>Fun_2_1</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, kin.o(i.Fun_2_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Fun_2_1 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[e7]"></a>Fun_2_2</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, kin.o(i.Fun_2_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Fun_2_2 &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[f8]"></a>Fun_2_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.Fun_2_3))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[f9]"></a>Fun_3_0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.Fun_3_0))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[fa]"></a>Fun_3_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.Fun_3_1))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[fb]"></a>Fun_3_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.Fun_3_2))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[fc]"></a>Fun_3_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kin.o(i.Fun_3_3))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
</UL>

<P><STRONG><a name="[7f]"></a>Kin_Calc</STRONG> (Thumb, 222 bytes, Stack size 72 bytes, kin.o(i.Kin_Calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Act
</UL>

<P><STRONG><a name="[95]"></a>Kin_FindRpy</STRONG> (Thumb, 1746 bytes, Stack size 896 bytes, kin.o(i.Kin_FindRpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 1528<LI>Call Chain = Kin_FindRpy &rArr; Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Calc
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_CoordinateAct
</UL>

<P><STRONG><a name="[7c]"></a>Kin_Forward</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, kin.o(i.Kin_Forward))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = Kin_Forward &rArr; FunFor_1_3 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_3_3
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_3_2
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_3_1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_3_0
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_3
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_2
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_1
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_0
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_3
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_1
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_0
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_3
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_2
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_0
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Act
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_ToolSystem
</UL>

<P><STRONG><a name="[ef]"></a>Kin_FunInv</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, kin.o(i.Kin_FunInv))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Kin_FunInv &rArr; FunInv2_0_3 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_3_3
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_3_2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_3_1
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_3_0
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_3
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_2
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_1
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_0
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_1_3
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_1_2
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_1_1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_1_0
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_3
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_2
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_1
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_0
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
</UL>

<P><STRONG><a name="[98]"></a>Kin_Funrpy</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, kin.o(i.Kin_Funrpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Kin_Funrpy &rArr; Fun_2_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_3_3
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_3_2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_3_1
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_3_0
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_3
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_0
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_3
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_2
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_1
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_0
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_3
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_2
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_1
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_0
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_ToolSystem
</UL>

<P><STRONG><a name="[94]"></a>Kin_Reference</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, kin.o(i.Kin_Reference))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Kin_Reference &rArr; FunRef_1_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_3_3
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_3_2
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_3_1
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_3_0
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_3
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_2
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_1
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_0
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_3
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_2
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_1
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_0
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_3
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_2
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_1
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_0
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_BaseSystem
</UL>

<P><STRONG><a name="[99]"></a>Matxmat</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, kin.o(i.Matxmat))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Matxmat &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_ToolSystem
</UL>

<P><STRONG><a name="[10e]"></a>Mot_Conf</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, motors.o(i.Mot_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mot_Conf
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ConfTim
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ConfGpio
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ConfAdc
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, control.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, motors.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; Mot_Act &rArr; Mot_ReadPos &rArr; __hardfp_fmod &rArr; __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM7_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, control.o(i.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1648<LI>Call Chain = TIM7_IRQHandler &rArr; Control_Act &rArr; Axes_Act &rArr; Axes_AutoSystem &rArr; Axes_AutoSystemOn &rArr; Axes_CoordinateAct &rArr; Kin_FindRpy &rArr; Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART1_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, comunication.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USART1_IRQHandler &rArr; Com_ReadFromHost &rArr; Com_ReadFrameSavePoint &rArr; Axes_AutoSavePoint &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFromHost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[115]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[113]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[a1]"></a>__hardfp_atan2</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq1
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q22
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q21
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q12
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q11
</UL>

<P><STRONG><a name="[9c]"></a>__hardfp_cos</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_0
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_2
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_1
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_0
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_1
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_0
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_1
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_0
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_2
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_1
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_0
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_2
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_1
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_0
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_3
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_1
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_0
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_1_1
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_3
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_0
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_3
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_2
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_1
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_0
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_3
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_1
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_0
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_3
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_2
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_0
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ayspr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axspr
</UL>

<P><STRONG><a name="[8d]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_KartCheckResults
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadErrors
</UL>

<P><STRONG><a name="[112]"></a>__hardfp_fmod</STRONG> (Thumb, 254 bytes, Stack size 48 bytes, fmod.o(i.__hardfp_fmod))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __hardfp_fmod &rArr; __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
</UL>

<P><STRONG><a name="[9f]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq1
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q22
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q21
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q12
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q11
</UL>

<P><STRONG><a name="[9b]"></a>__hardfp_sin</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_0
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_2
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_1
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_0
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_2
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_1
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_2
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_1
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_2
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_1
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_0
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_1
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_0
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_3
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_2
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_1_0
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_3
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_1
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_0
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_3
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_2
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_1
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_0
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_3
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_1
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_0
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_3
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_2
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_0
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ayspr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axspr
</UL>

<P><STRONG><a name="[a0]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr1
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq1
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q22
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q21
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q12
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q11
</UL>

<P><STRONG><a name="[11c]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[11e]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[118]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[11d]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[120]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[114]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[119]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[11b]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[121]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[116]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[11a]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[126]"></a>delay_ms</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, control.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[117]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[6d]"></a>main</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; Control_Conf &rArr; Control_ReadBackup &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Conf
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_SendToHost
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_Conf
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDev_Conf
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Conf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[fd]"></a>qq1</STRONG> (Thumb, 608 bytes, Stack size 136 bytes, kin.o(i.qq1))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = qq1 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
</UL>

<P><STRONG><a name="[fe]"></a>qq2</STRONG> (Thumb, 608 bytes, Stack size 136 bytes, kin.o(i.qq2))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = qq2 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
</UL>

<P><STRONG><a name="[ff]"></a>rr1</STRONG> (Thumb, 180 bytes, Stack size 88 bytes, kin.o(i.rr1))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rr1 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
</UL>

<P><STRONG><a name="[100]"></a>rr2</STRONG> (Thumb, 156 bytes, Stack size 80 bytes, kin.o(i.rr2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = rr2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
</UL>

<P><STRONG><a name="[122]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_ToolSystem
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_BaseSystem
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Regulator
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr1
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_0
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_2
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_1
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_1
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_1
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_0
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_0
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_3
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_2
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_1_1
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_3
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_0
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_1
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q22
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q21
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q12
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q11
</UL>

<P><STRONG><a name="[168]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[169]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[16a]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[16b]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[16c]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[8f]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matxmat
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_KartCheckResults
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_JointSystem
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_BaseSystem
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Regulator
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr1
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq1
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_0
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_0
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_1
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_1
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_0
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_3
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_2
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_1
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_0
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_3
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_2
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_1
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_0
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_3
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_2
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_1
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_0
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_3
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_1
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_0
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_3
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_2
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_0
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q22
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q21
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q12
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q11
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ayspr
</UL>

<P><STRONG><a name="[127]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[12b]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[12f]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_StructConf
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadBackup
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoReadPointFromBackup
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Regulator
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadCurrent
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr1
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq1
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q22
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q21
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q12
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q11
</UL>

<P><STRONG><a name="[12d]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_KartCheckResults
</UL>

<P><STRONG><a name="[12e]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_WriteBackup
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_PrepareFrameMotPos
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSavePointToBackup
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_DirPwmAct
</UL>

<P><STRONG><a name="[130]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_StructConf
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadBackup
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameGeneral
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSavePoint
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoReadPointFromBackup
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
</UL>

<P><STRONG><a name="[16d]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[88]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSavePoint
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadCurrent
</UL>

<P><STRONG><a name="[16e]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[8e]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadBackup
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_KartCheckResults
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_JointSystem
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadErrors
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_DirPwmAct
</UL>

<P><STRONG><a name="[131]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[134]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_WriteBackup
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_StructConf
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_PrepareFrameMotPos
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matxmat
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Calc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSavePointToBackup
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSavePoint
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_ToolSystem
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_JointSystem
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_BaseSystem
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Regulator
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_DirPwmAct
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr1
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq1
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_2_0
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_2
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_1
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_0
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_1
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_0_0
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_1
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_2_0
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_2
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_1
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_0
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_2
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_1
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_0_0
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_3
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_1
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_0
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_3
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_1
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_0
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_3
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_2
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_1
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_0
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_3
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_1
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_0
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_3
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_2
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_0
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q22
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q21
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q12
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q11
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ayspr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axspr
</UL>

<P><STRONG><a name="[132]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[12a]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[11f]"></a>_drem</STRONG> (Thumb, 328 bytes, Stack size 16 bytes, drem_clz.o(x$fpl$drem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drem &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
</UL>

<P><STRONG><a name="[129]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ReadBackup
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_KartCheckResults
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_JointSystem
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Regulator
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_DirPwmAct
</UL>

<P><STRONG><a name="[133]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[c3]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Calc
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_3
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_3
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_3
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_3
</UL>

<P><STRONG><a name="[135]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[124]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q4_6
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q2_3
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Q1
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FindRpy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_KartCheckResults
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystem
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Regulator
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadErrors
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq1
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fun_1_1
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunRef_1_0
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_2_3
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunInv2_0_3
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_3
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_1
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_2_0
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_3
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_1
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_1_0
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_3
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_2
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFor_0_0
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q22
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q21
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q12
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q11
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axspr
</UL>

<P><STRONG><a name="[137]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[67]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[16f]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[170]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[12c]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[123]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[138]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7a]"></a>AddDev_LaserConf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, adddevice.o(i.AddDev_LaserConf))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDev_Conf
</UL>

<P><STRONG><a name="[79]"></a>Led_Conf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, adddevice.o(i.Led_Conf))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDev_Conf
</UL>

<P><STRONG><a name="[82]"></a>Axes_AutoSystem</STRONG> (Thumb, 948 bytes, Stack size 24 bytes, axes.o(i.Axes_AutoSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 1624<LI>Call Chain = Axes_AutoSystem &rArr; Axes_AutoSystemOn &rArr; Axes_CoordinateAct &rArr; Kin_FindRpy &rArr; Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_CoordinateAct
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Act
</UL>

<P><STRONG><a name="[7e]"></a>Axes_BaseSystem</STRONG> (Thumb, 372 bytes, Stack size 80 bytes, axes.o(i.Axes_BaseSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Axes_BaseSystem &rArr; Kin_Reference &rArr; FunRef_1_0 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Reference
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Act
</UL>

<P><STRONG><a name="[7d]"></a>Axes_JointSystem</STRONG> (Thumb, 484 bytes, Stack size 16 bytes, axes.o(i.Axes_JointSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Axes_JointSystem &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Act
</UL>

<P><STRONG><a name="[80]"></a>Axes_KartCheckResults</STRONG> (Thumb, 630 bytes, Stack size 32 bytes, axes.o(i.Axes_KartCheckResults))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Axes_KartCheckResults &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Act
</UL>

<P><STRONG><a name="[83]"></a>Axes_Stop</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, axes.o(i.Axes_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Act
</UL>

<P><STRONG><a name="[81]"></a>Axes_ToolSystem</STRONG> (Thumb, 346 bytes, Stack size 392 bytes, axes.o(i.Axes_ToolSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = Axes_ToolSystem &rArr; Kin_Forward &rArr; FunFor_1_3 &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matxmat
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Funrpy
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Forward
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Act
</UL>

<P><STRONG><a name="[a5]"></a>Com_PrepareFrameMotPos</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, comunication.o(i.Com_PrepareFrameMotPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Com_PrepareFrameMotPos &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStr
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_SendToHost
</UL>

<P><STRONG><a name="[a8]"></a>Com_PrepareFrameTelemetry</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, comunication.o(i.Com_PrepareFrameTelemetry))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Com_PrepareFrameTelemetry &rArr; crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_SendToHost
</UL>

<P><STRONG><a name="[a9]"></a>Com_ReadFrameEmergencyStop</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, comunication.o(i.Com_ReadFrameEmergencyStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Com_ReadFrameEmergencyStop &rArr; crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFromHost
</UL>

<P><STRONG><a name="[aa]"></a>Com_ReadFrameGeneral</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, comunication.o(i.Com_ReadFrameGeneral))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Com_ReadFrameGeneral &rArr; crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFromHost
</UL>

<P><STRONG><a name="[ab]"></a>Com_ReadFrameOnlyCmd</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, comunication.o(i.Com_ReadFrameOnlyCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Com_ReadFrameOnlyCmd &rArr; crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFromHost
</UL>

<P><STRONG><a name="[ac]"></a>Com_ReadFrameSavePoint</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, comunication.o(i.Com_ReadFrameSavePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Com_ReadFrameSavePoint &rArr; Axes_AutoSavePoint &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSavePointToBackup
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSavePoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFromHost
</UL>

<P><STRONG><a name="[ad]"></a>Com_ReadFromHost</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, comunication.o(i.Com_ReadFromHost))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Com_ReadFromHost &rArr; Com_ReadFrameSavePoint &rArr; Axes_AutoSavePoint &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStr
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameSavePoint
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameOnlyCmd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameGeneral
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameEmergencyStop
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>crc16</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, comunication.o(i.crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameSavePoint
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameOnlyCmd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameGeneral
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_ReadFrameEmergencyStop
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_PrepareFrameTelemetry
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_PrepareFrameMotPos
</UL>

<P><STRONG><a name="[b6]"></a>Control_BackupConf</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, control.o(i.Control_BackupConf))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Conf
</UL>

<P><STRONG><a name="[ba]"></a>Control_IWDGConf</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, control.o(i.Control_IWDGConf))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Conf
</UL>

<P><STRONG><a name="[b9]"></a>Control_ReadBackup</STRONG> (Thumb, 346 bytes, Stack size 88 bytes, control.o(i.Control_ReadBackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Control_ReadBackup &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Conf
</UL>

<P><STRONG><a name="[b1]"></a>Control_ReadCmdFromHost</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, control.o(i.Control_ReadCmdFromHost))
<BR><BR>[Stack]<UL><LI>Max Depth = 1608<LI>Call Chain = Control_ReadCmdFromHost &rArr; Axes_AutoSystemOn &rArr; Axes_CoordinateAct &rArr; Kin_FindRpy &rArr; Kin_Calc &rArr; Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_ManipEnable
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_ManipDisable
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_Defpos
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_CoordinateAct
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSystemOn
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSavePointToBackup
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoClearSeq
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Act
</UL>

<P><STRONG><a name="[b0]"></a>Control_Status</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, control.o(i.Control_Status))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Act
</UL>

<P><STRONG><a name="[b7]"></a>Control_StructConf</STRONG> (Thumb, 3186 bytes, Stack size 24 bytes, control.o(i.Control_StructConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Control_StructConf &rArr; Axes_AutoSavePointToBackup &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axes_AutoSavePointToBackup
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Conf
</UL>

<P><STRONG><a name="[b8]"></a>Control_TimConf</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, control.o(i.Control_TimConf))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Conf
</UL>

<P><STRONG><a name="[b2]"></a>Control_WriteBackup</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, control.o(i.Control_WriteBackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Control_WriteBackup &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Act
</UL>

<P><STRONG><a name="[b5]"></a>RCC_Conf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, control.o(i.RCC_Conf))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Conf
</UL>

<P><STRONG><a name="[b4]"></a>RCC_SystemInit</STRONG> (Thumb, 150 bytes, Stack size 12 bytes, control.o(i.RCC_SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Conf
</UL>

<P><STRONG><a name="[e8]"></a>Kin_Q1</STRONG> (Thumb, 918 bytes, Stack size 80 bytes, kin.o(i.Kin_Q1))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = Kin_Q1 &rArr; qq2 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr1
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qq1
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ayspr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Axspr
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Calc
</UL>

<P><STRONG><a name="[e9]"></a>Kin_Q2_3</STRONG> (Thumb, 748 bytes, Stack size 80 bytes, kin.o(i.Kin_Q2_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = Kin_Q2_3 &rArr; B_q11 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q22
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q21
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q12
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_q11
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Calc
</UL>

<P><STRONG><a name="[ea]"></a>Kin_Q4_6</STRONG> (Thumb, 832 bytes, Stack size 296 bytes, kin.o(i.Kin_Q4_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = Kin_Q4_6 &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matxmat
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FunInv
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Calc
</UL>

<P><STRONG><a name="[108]"></a>Mot_Act</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, motors.o(i.Mot_Act))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Mot_Act &rArr; Mot_ReadPos &rArr; __hardfp_fmod &rArr; __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Regulator
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadPos
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadErrors
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_ReadCurrent
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_DirPwmAct
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[111]"></a>Mot_ConfAdc</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, motors.o(i.Mot_ConfAdc))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Conf
</UL>

<P><STRONG><a name="[10f]"></a>Mot_ConfGpio</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, motors.o(i.Mot_ConfGpio))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Conf
</UL>

<P><STRONG><a name="[110]"></a>Mot_ConfTim</STRONG> (Thumb, 1432 bytes, Stack size 0 bytes, motors.o(i.Mot_ConfTim))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Conf
</UL>

<P><STRONG><a name="[10d]"></a>Mot_DirPwmAct</STRONG> (Thumb, 1420 bytes, Stack size 16 bytes, motors.o(i.Mot_DirPwmAct))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Mot_DirPwmAct &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Act
</UL>

<P><STRONG><a name="[10b]"></a>Mot_ReadCurrent</STRONG> (Thumb, 286 bytes, Stack size 80 bytes, motors.o(i.Mot_ReadCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Mot_ReadCurrent &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Act
</UL>

<P><STRONG><a name="[10a]"></a>Mot_ReadErrors</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, motors.o(i.Mot_ReadErrors))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Mot_ReadErrors &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Act
</UL>

<P><STRONG><a name="[109]"></a>Mot_ReadPos</STRONG> (Thumb, 630 bytes, Stack size 48 bytes, motors.o(i.Mot_ReadPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Mot_ReadPos &rArr; __hardfp_fmod &rArr; __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Act
</UL>

<P><STRONG><a name="[10c]"></a>Mot_Regulator</STRONG> (Thumb, 1064 bytes, Stack size 72 bytes, motors.o(i.Mot_Regulator))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Mot_Regulator &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mot_Act
</UL>

<P><STRONG><a name="[136]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[128]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
